<?xml version='1.0' encoding='UTF-8'?>
<slide xmlns="https://ulearn.me/schema/v2" title="0. О курсе" id="fb1ff654-a3aa-4945-9c7f-7ef835477eb6">
  <markdown>
Данный раздел содержит руководство по выполнению заданий, а также тестовое задание для опробования каждого из этапов.

# Инструменты
Для выполнения задач необходимо установить следующий набор инструментов:

* [jdk 11](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html) - виртуальная машина Java (JVM) с набором инструментов для разработчика, хотя и курс составлен для [jdk 8](https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html), если у вас уже установлена Java этой версии, то можно ничего не делать.
* [git](https://git-scm.com/) - система контроля версий
* [IntelliJ IDEA](https://www.jetbrains.com/idea/) - IDE для разработки на Java

# Общая информация

Для каждого из разделов курса создан репозиторий в [GitHub](https://github.com/naumen-student/ulearn-me-course-java). Для сдачи заданий потребуется зарегистрироваться на этом сервисе, а также базовые знания работы с инструментом контроля версий [git](https://git-scm.com/book/ru/v2).

Каждое задание сдается через *Pull Request*, т.е. через запрос на принятие изменений в репозиторий. В реальности преподаватель не будет принимать эти изменения (т.е. изменять базовый репозиторий), такой способ нужен для отслеживания прогресса студента и базовой задания на соответствия тестам (если они написаны для задачи)

# Подготовка к сдаче раздела
В информации по курсу есть ссылка на репозиторий в GitHub'е, в котором будут лежать все задачи курса. Для подготовки сдачи задания необходимо сделать [fork](https://git-scm.com/book/ru/v2/GitHub-%D0%92%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5-%D1%81%D0%BE%D0%B1%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B2%D0%BA%D0%BB%D0%B0%D0%B4%D0%B0-%D0%B2-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B) репозитория. Fork - это копия репозитория, сделанная с целью внесения в проект изменений. А в последствии обновлять свой репозиторий из основного (см. раздел _Поддержание GitHub репозитория в актуальном состоянии_)

Добавив таким образом проект, в окне проекта можно будет увидеть все задачи данного раздела (task01, task02, ...)

# Сдача задач

Каждая задача должна сдаваться в отдельном *Pull Request*'е. Например, если в разделе 5 задач, то студент должен создать 5 *Pull Request* - по одному на каждую задачу.

Решение каждой задачи условно разобьём на следующие этапы:

1. Создание новой [ветки](https://git-scm.com/book/ru/v2/%D0%92%D0%B5%D1%82%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-Git-%D0%9E-%D0%B2%D0%B5%D1%82%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B8-%D0%B2-%D0%B4%D0%B2%D1%83%D1%85-%D1%81%D0%BB%D0%BE%D0%B2%D0%B0%D1%85)
2. Решение задачи
3. Тестирование решения (если предусмотрено)
4. Создание [коммита](https://git-scm.com/book/ru/v2/%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B-Git-%D0%97%D0%B0%D0%BF%D0%B8%D1%81%D1%8C-%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B2-%D1%80%D0%B5%D0%BF%D0%BE%D0%B7%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D0%B9) и отправка его в репозиторий
5. Создание *Pull Request*.

## 1. Создание новой ветки
Перед созданием новой ветки необходимо убедиться, что текущая ветка - *master*. В IntelliJ IDEA текущая ветка по умолчанию отображается в правом нижнем углу напротив *Git:*

Если вы пользуетесь консолью при работе с Git, то наберите:
```git branch```
Эта команда отобразит текущую ветку

Для создания новой ветки в IntelliJ IDEA достаточно кликнуть на *Git: master* -&gt; *New Branch* и затем ввести имя новой ветки (для удобства веткам лучше давать имена, содержащие информацию о модуле и задаче, например, 02_task01 - первая задача второго модуля)

В консоли: ```git checkout -b 02_task01```

## 2. Решение задачи
В каждой задаче присутствует Readme файл с детальным описанием задачи.
Иногда задачи могут содержать уже какой-то код, а иногда все придётся выполнить "с нуля".

Не забывайте форматировать ваш код. Можно воспользоваться правилами, описанными в IntelliJ IDEA по-умолчанию либо воспользоваться какой-либо из существующих конвенций. IntelliJ IDEA содержит инструмент по автоматическому форматированию кода. Воспользоваться им можно, нажав *Code* -&gt; *Reformat Code*, либо сочетанием клавиш *Ctrl+Alt+L*.

Учитесь писать отформатированный код с самого начала.

## 3. Тестирование решения
В некоторых задачах предусмотрены тесты, которые проверяют различные аспекты решения задачи. Эти тесты нужно запустить локально для первоначальной проверки решения. Эти же тесты запускаются при создании *Pull Request*.

Все тесты, если предусмотрены для задачи, описаны в классе *Tests*. Для запуска тестов нужно щелкнуть правой кнопкой мыши на классе и нажать *Run 'Tests'*

!!! *Pull Request*, в котором не проходят тесты, не будет рассматриваться преподавателем.

## 4. Создание коммита и отправка его в репозиторий
Коммит - это фиксирование изменений в локальном репозитории для последующего обновления удаленного репозитория (в GitHub).

Для фиксирования изменения и подготовке созданию *Pull Request* в IntelliJ IDEA щёлкните правой кнопкой мыши на директорию с заданием и нажмите *Git* -&gt; *Commit Directory...*. Откроется диалог создание коммита. Проверьте, что отмечены только те файлы, которые относятся к выполняемой задаче (Система автоматизированной проверки тестов запрещает изменение в нескольких задачах одновременно. После отправки тесты не пройдут и задача не будет принята преподавателем). Дополнительно необходимо заполнить комментарий (нужно задать в формате "Фамилия Имя. Задание 01").

Для отправки подготовленного коммита в *GitHub* репозиторий нажмите правой кнопкой мыши на проект и далее *Git* -&gt; *Repository* -&gt; *Push...* или воспользуйтесь сочетанием клавиш *Ctrl+Shift+K* и нажмите кнопку *Push*.

## 5. Создание *Pull Request*
При переходе на страницу репозитория нужно нажать кнопку *New Pull Request*, вы увидите страницу создания *Pull Request*. Вы должны выбрать "от куда" и "куда" вы хотите внести изменения. Слева должен быть репозиторий, из которого вы делали *fork* (ветка *master*), а справа должен быть ваш репозиторий (ветка, в которой вы выполнили задачу). При первом нажатии на кнопку *Create Pull Request* откроется окно, в котором нужно ввести название и при желании оставить комментарий. Название должно быть "Фамилия Имя. Задание 01", где нужно указать свои имя и фамилию и корректный номер задания.

Через какое-то время после создания *Pull Request* автоматически должны запуститься тесты. Если тесты прошли и появилась зеленая иконка, символизирующая это, то можно приступить к выполнению следующих задач. Преподаватель получит уведомление, о попытке сдачи задания и проверит её, как только у него появится время.
  </markdown>
</slide>
